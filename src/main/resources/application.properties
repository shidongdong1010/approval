##指定环境,用来做环境切换
##spring.profiles.active=dev

#DB properties:
#DB properties:
app.datasource.url=jdbc:mysql://192.168.82.74:3306/akapp?useUnicode=true&characterEncoding=utf-8
app.datasource.username=root
app.datasource.password=itanbank
app.datasource.driverClassName=com.mysql.jdbc.Driver
#最大连接数量
app.datasource.max-active=5
#最大空闲连接
app.datasource.max-idle=5
#最小空闲连接
app.datasource.min-idle=2
#初始化连接
app.datasource.initial-size=2
#连接被泄露时是否打印(未测试是否有效)
app.datasource.log-abandoned=true
#是否自动回收超时连接(未测试是否有效)
app.datasource.remove-abandoned=true
#超时时间(以秒数为单位)(未测试是否有效)
app.datasource.remove-abandonedTimeout=180
#验证SQL
app.datasource.validation-query=SELECT 1
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
app.datasource.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
app.datasource.test-on-return=false
#建议配置为true，不影响性能，并且保证安全性。 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
app.datasource.test-while-idle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位。 有两个含义： 1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
app.datasource.time-between-eviction-runs-millis=10000
#1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程
app.datasource.min-evictable-idle-time-millis=10000
#超时等待时间以毫秒为单位
app.datasource.max-wait=3000

web.datasource.url=jdbc:mysql://192.168.82.74:3306/akweb?useUnicode=true&characterEncoding=utf-8
web.datasource.username=root
web.datasource.password=itanbank
web.datasource.driverClassName=com.mysql.jdbc.Driver
#最大连接数量
web.datasource.max-active=5
#最大空闲连接
web.datasource.max-idle=5
#最小空闲连接
web.datasource.min-idle=2
#初始化连接
web.datasource.initial-size=2
#连接被泄露时是否打印(未测试是否有效)
web.datasource.log-abandoned=true
#是否自动回收超时连接(未测试是否有效)
web.datasource.remove-abandoned=true
#超时时间(以秒数为单位)(未测试是否有效)
web.datasource.remove-abandonedTimeout=180
#验证SQL
web.datasource.validation-query=SELECT 1
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
web.datasource.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
web.datasource.test-on-return=false
#建议配置为true，不影响性能，并且保证安全性。 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
web.datasource.test-while-idle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位。 有两个含义： 1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
web.datasource.time-between-eviction-runs-millis=10000
#1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程
web.datasource.min-evictable-idle-time-millis=10000
#超时等待时间以毫秒为单位
web.datasource.max-wait=3000


account.datasource.url=jdbc:mysql://192.168.82.74:3306/akaccount?useUnicode=true&characterEncoding=utf-8
account.datasource.username=root
account.datasource.password=itanbank
account.datasource.driverClassName=com.mysql.jdbc.Driver
#最大连接数量
account.datasource.max-active=5
#最大空闲连接
account.datasource.max-idle=5
#最小空闲连接
account.datasource.min-idle=2
#初始化连接
account.datasource.initial-size=2
#连接被泄露时是否打印(未测试是否有效)
account.datasource.log-abandoned=true
#是否自动回收超时连接(未测试是否有效)
account.datasource.remove-abandoned=true
#超时时间(以秒数为单位)(未测试是否有效)
account.datasource.remove-abandonedTimeout=180
#验证SQL
account.datasource.validation-query=SELECT 1
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
account.datasource.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
account.datasource.test-on-return=false
#建议配置为true，不影响性能，并且保证安全性。 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。
account.datasource.test-while-idle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位。 有两个含义： 1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
account.datasource.time-between-eviction-runs-millis=10000
#1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程
account.datasource.min-evictable-idle-time-millis=10000
#超时等待时间以毫秒为单位
account.datasource.max-wait=3000

#JPA Configuration:
spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#Server Configuration:
server.port=8083
server.session.timeout=30000



#######################################业务相关配置#############################################################
#系统ID，审批系统=1
itanbank.system.id=2

#登陆最多错误次数
login.error.max.nums=6

file.base.path=/Users/dongdongshi/work/ak/upload
core.company.file.path=coreCompany

#根据字典生成的JS
dimnode.js.vm.file=dim_node.vm
#代偿金额统计截止时间
advanceEndtime=17:30:00

#订单未支付最长时间秒
order.nopay.timerout=600

#联动优势参数配置
#签名方式
ump.sign_type=RSA
#参数字符编码集
ump.charset=UTF-8
#响应格式
ump.res_format=HTML
#商户编号
ump.mer_id=7050163
#版本号
ump.version=1.0
#证件类型-身份证
ump.identity_type=IDENTITY_CARD
#第三方回调服务地址
ump.notify_server=http://itanbank-account.ngrok.cc/
#成功返回码
ump.ret_code_success=0000

#生产环境URL(请勿修改)
#联动内网地址：plat.url=http://10.10.73.28:9200
ump.plat.url=http://114.113.159.203:9200

umpay.cere.path=D:/umpay-cert
#商户私钥配置路径(必须为绝对路径),可配置多个
ump.7050163.mer.prikey.path=${umpay.cere.path}/7050163_aitanbangUAT.key.p8
#UMPAY平台证书路径（必须为绝对路径）
ump.plat.cert.path=${umpay.cere.path}/umpay.cert.crt

dowmloan.file.path=downLoan